const fs = require('fs');
const path = require('path');

// Example LaTeX document
const exampleLatex = `\\documentclass{article}
\\usepackage[utf8]{inputenc}
\\usepackage{geometry}
\\geometry{margin=1in}

\\title{AI CV and Cover Letter Generator}
\\author{Generated by Tectonic Microservice}
\\date{\\today}

\\begin{document}

\\maketitle

\\section{Introduction}
This is a test document generated by the tectonic LaTeX microservice. 
It demonstrates the capability to generate PDFs from LaTeX strings.

\\section{Features}
\\begin{itemize}
    \\item Full LaTeX document support
    \\item Automatic package management
    \\item Secure compilation environment
    \\item RESTful API interface
\\end{itemize}

\\section{Technical Details}
The service uses tectonic, a modern LaTeX engine that:
\\begin{enumerate}
    \\item Automatically downloads missing packages
    \\item Provides better error messages
    \\item Is designed for headless operation
    \\item Supports modern LaTeX features
\\end{enumerate}

\\section{Usage}
To use this service, send a POST request to \\texttt{/compile} with:
\\begin{verbatim}
{
  "latex": "your LaTeX content here",
  "filename": "optional-filename"
}
\\end{verbatim}

\\section{Conclusion}
This microservice provides a robust solution for generating PDFs from LaTeX content in web applications.

\\end{document}`;

// Test function
async function testTectonicAPI() {
  const API_URL = 'http://localhost:3000';
  
  console.log('üß™ Testing Tectonic LaTeX API...\n');
  
  try {
    // Test health endpoint
    console.log('1. Testing health endpoint...');
    const healthResponse = await fetch(`${API_URL}/health`);
    const healthData = await healthResponse.json();
    console.log('‚úÖ Health check:', healthData);
    
    // Test compilation
    console.log('\n2. Testing LaTeX compilation...');
    const compileResponse = await fetch(`${API_URL}/compile`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        latex: exampleLatex,
        filename: 'test-document'
      })
    });
    
    if (compileResponse.ok) {
      const pdfBuffer = await compileResponse.arrayBuffer();
      const outputPath = path.join(__dirname, 'test-output.pdf');
      fs.writeFileSync(outputPath, Buffer.from(pdfBuffer));
      console.log(`‚úÖ PDF generated successfully! Saved to: ${outputPath}`);
      console.log(`üìÑ PDF size: ${(pdfBuffer.byteLength / 1024).toFixed(2)} KB`);
    } else {
      const errorData = await compileResponse.json();
      console.error('‚ùå Compilation failed:', errorData);
    }
    
  } catch (error) {
    console.error('‚ùå Test failed:', error.message);
    console.log('\nüí° Make sure the tectonic service is running:');
    console.log('   npm start');
    console.log('   or');
    console.log('   docker-compose up');
  }
}

// Run test if this file is executed directly
if (require.main === module) {
  testTectonicAPI();
}

module.exports = { testTectonicAPI, exampleLatex }; 